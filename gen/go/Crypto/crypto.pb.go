// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: Crypto/crypto.proto

package cryptov1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SupportedCryptosResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cryptos       []*CryptoCurrency      `protobuf:"bytes,1,rep,name=cryptos,proto3" json:"cryptos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SupportedCryptosResponse) Reset() {
	*x = SupportedCryptosResponse{}
	mi := &file_Crypto_crypto_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SupportedCryptosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportedCryptosResponse) ProtoMessage() {}

func (x *SupportedCryptosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Crypto_crypto_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportedCryptosResponse.ProtoReflect.Descriptor instead.
func (*SupportedCryptosResponse) Descriptor() ([]byte, []int) {
	return file_Crypto_crypto_proto_rawDescGZIP(), []int{0}
}

func (x *SupportedCryptosResponse) GetCryptos() []*CryptoCurrency {
	if x != nil {
		return x.Cryptos
	}
	return nil
}

type CryptoCurrency struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`                             // "BTC", "ETH", "USDT"
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                             // "Bitcoin", "Ethereum"
	MinAmount     int64                  `protobuf:"varint,3,opt,name=min_amount,json=minAmount,proto3" json:"min_amount,omitempty"` // Минимальная сумма
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CryptoCurrency) Reset() {
	*x = CryptoCurrency{}
	mi := &file_Crypto_crypto_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CryptoCurrency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptoCurrency) ProtoMessage() {}

func (x *CryptoCurrency) ProtoReflect() protoreflect.Message {
	mi := &file_Crypto_crypto_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptoCurrency.ProtoReflect.Descriptor instead.
func (*CryptoCurrency) Descriptor() ([]byte, []int) {
	return file_Crypto_crypto_proto_rawDescGZIP(), []int{1}
}

func (x *CryptoCurrency) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CryptoCurrency) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CryptoCurrency) GetMinAmount() int64 {
	if x != nil {
		return x.MinAmount
	}
	return 0
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_Crypto_crypto_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_Crypto_crypto_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_Crypto_crypto_proto_rawDescGZIP(), []int{2}
}

var File_Crypto_crypto_proto protoreflect.FileDescriptor

var file_Crypto_crypto_proto_rawDesc = string([]byte{
	0x0a, 0x13, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x22, 0x4c, 0x0a,
	0x18, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x52, 0x07, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x22, 0x57, 0x0a, 0x0e, 0x43,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x54, 0x0a,
	0x0a, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x46, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x43, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x73, 0x12, 0x0d, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x20, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x4c, 0x65, 0x78, 0x42, 0x6f, 0x6b, 0x75, 0x6e, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_Crypto_crypto_proto_rawDescOnce sync.Once
	file_Crypto_crypto_proto_rawDescData []byte
)

func file_Crypto_crypto_proto_rawDescGZIP() []byte {
	file_Crypto_crypto_proto_rawDescOnce.Do(func() {
		file_Crypto_crypto_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_Crypto_crypto_proto_rawDesc), len(file_Crypto_crypto_proto_rawDesc)))
	})
	return file_Crypto_crypto_proto_rawDescData
}

var file_Crypto_crypto_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_Crypto_crypto_proto_goTypes = []any{
	(*SupportedCryptosResponse)(nil), // 0: crypto.SupportedCryptosResponse
	(*CryptoCurrency)(nil),           // 1: crypto.CryptoCurrency
	(*Empty)(nil),                    // 2: crypto.Empty
}
var file_Crypto_crypto_proto_depIdxs = []int32{
	1, // 0: crypto.SupportedCryptosResponse.cryptos:type_name -> crypto.CryptoCurrency
	2, // 1: crypto.CryptoInfo.GetSupportedCryptos:input_type -> crypto.Empty
	0, // 2: crypto.CryptoInfo.GetSupportedCryptos:output_type -> crypto.SupportedCryptosResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_Crypto_crypto_proto_init() }
func file_Crypto_crypto_proto_init() {
	if File_Crypto_crypto_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_Crypto_crypto_proto_rawDesc), len(file_Crypto_crypto_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_Crypto_crypto_proto_goTypes,
		DependencyIndexes: file_Crypto_crypto_proto_depIdxs,
		MessageInfos:      file_Crypto_crypto_proto_msgTypes,
	}.Build()
	File_Crypto_crypto_proto = out.File
	file_Crypto_crypto_proto_goTypes = nil
	file_Crypto_crypto_proto_depIdxs = nil
}
